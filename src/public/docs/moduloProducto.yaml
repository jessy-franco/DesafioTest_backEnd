paths:
  /api/products/:
    get:
      summary: Obtiene todos los productos disponibles.
      tags: 
      - Productos
      responses:
        "200":
          description: La solicitud se completó exitosamente. Retorna una lista de todos los productos disponibles en la tienda.
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Product'
        "500":
          description: INTERNAL_SERVER_ERROR, No se pudo obtener los productos
    post:
      summary: Crea un nuevo producto.
      tags:
        - Productos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        "201":
          description: La solicitud se completó exitosamente. El producto ha sido creado.
        "400":
          description: BAD_REQUEST. Faltan campos obligatorios o el formato de los datos es incorrecto.
        "500":
          description: INTERNAL_SERVER_ERROR. No se pudo crear el producto o no esta autorizado para crearlo.

  /api/products/new:
    get:
      summary: Obtiene el formulario para crear un nuevo producto.
      tags:
        - Productos
      responses:
        "200":
          description: La solicitud se completó exitosamente. Retorna el formulario para crear un nuevo producto.
        "500":
          description: no esta autorizado para crear un nuevo producto

  /api/products/{id}:
    get:
      summary: Obtiene un producto por su ID.
      tags:
        - Productos
      parameters:
        - in: path
          name: id
          required: true
          description: ID del producto a obtener.
          schema:
            type: string
      responses:
        "200":
          description: La solicitud se completó exitosamente. Retorna los detalles del producto específico.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        "404":
          description: NOT_FOUND. El producto no fue encontrado.
    put:
      summary: Actualiza un producto existente por su ID.
      tags:
        - Productos
      parameters:
        - in: path
          name: id
          required: true
          description: ID del producto a actualizar.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        "200":
          description: La solicitud se completó exitosamente. El producto ha sido actualizado.
        "404":
          description: NOT_FOUND. El producto no fue encontrado.
        "500":
          description: INTERNAL_SERVER_ERROR. No se pudo actualizar el producto.
    delete:
      summary: Elimina un producto por su ID.
      tags:
        - Productos
      parameters:
        - in: path
          name: id
          required: true
          description: ID del producto a eliminar.
          schema:
            type: string
      responses:
        "200":
          description: La solicitud se completó exitosamente. El producto ha sido eliminado.
        "404":
          description: NOT_FOUND. El producto no fue encontrado.
        "500":
          description: INTERNAL_SERVER_ERROR. No se pudo eliminar el producto.

  /api/carts/:
    post:
      summary: Crea un nuevo carrito.
      tags:
        - Carritos
      responses:
        "201":
          description: La solicitud se completó exitosamente. El carrito ha sido creado.
        "500":
          description: INTERNAL_SERVER_ERROR. No se pudo crear el carrito.

  /api/carts/{cid}:
    get:
      summary: Obtiene un carrito por su ID.
      tags:
        - Carritos
      parameters:
        - in: path
          name: cid
          required: true
          description: ID del carrito a obtener.
          schema:
            type: string
      responses:
        "200":
          description: La solicitud se completó exitosamente. Retorna los detalles del carrito específico.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        "404":
          description: NOT_FOUND. El carrito no fue encontrado.
    put:
      summary: Actualiza un carrito existente por su ID.
      tags:
        - Carritos
      parameters:
        - in: path
          name: cid
          required: true
          description: ID del carrito a actualizar.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
      responses:
        "200":
          description: La solicitud se completó exitosamente. El carrito ha sido actualizado.
        "404":
          description: NOT_FOUND. El carrito no fue encontrado.
        "500":
          description: INTERNAL_SERVER_ERROR. No se pudo actualizar el carrito.
    delete:
      summary: Elimina un carrito por su ID.
      tags:
        - Carritos
      parameters:
        - in: path
          name: cid
          required: true
          description: ID del carrito a eliminar.
          schema:
            type: string
      responses:
        "200":
          description: La solicitud se completó exitosamente. El carrito ha sido eliminado.
        "404":
          description: NOT_FOUND. El carrito no fue encontrado.
        "500":
          description: INTERNAL_SERVER_ERROR. No se pudo eliminar el carrito.

  /api/carts/{cid}/products/{pid}:
    post:
      summary: Añade un producto al carrito.
      tags:
        - Carritos
      parameters:
        - in: path
          name: cid
          required: true
          description: ID del carrito.
          schema:
            type: string
        - in: path
          name: pid
          required: true
          description: ID del producto a añadir.
          schema:
            type: string
      responses:
        "200":
          description: La solicitud se completó exitosamente. El producto ha sido añadido al carrito.
        "500":
          description: INTERNAL_SERVER_ERROR. No se pudo añadir el producto al carrito.

    delete:
      summary: Elimina un producto del carrito.
      tags:
        - Carritos
      parameters:
        - in: path
          name: cid
          required: true
          description: ID del carrito.
          schema:
            type: string
        - in: path
          name: pid
          required: true
          description: ID del producto a eliminar.
          schema:
            type: string
      responses:
        "200":
          description: La solicitud se completó exitosamente. El producto ha sido eliminado del carrito.
        "500":
          description: INTERNAL_SERVER_ERROR. No se pudo eliminar el producto del carrito.

  /api/carts/{cid}/purchase:
    post:
      summary: Finaliza el proceso de compra del carrito.
      tags:
        - Carritos
      parameters:
        - in: path
          name: cid
          required: true
          description: ID del carrito.
          schema:
            type: string
      responses:
        "200":
          description: La solicitud se completó exitosamente. La compra ha sido realizada.
        "500":
          description: INTERNAL_SERVER_ERROR. No se pudo completar la compra del carrito.

components:
  schemas:
    Product:
      type: object
      properties:
        title:
          type: string
          description: Título del producto.
        description:
          type: string
          description: Descripción del producto.
        code:
          type: string
          description: Código único del producto.
        price:
          type: number
          description: Precio del producto.
        stock:
          type: integer
          description: Cantidad en stock del producto.
        category:
          type: string
          description: Categoría del producto.
        thumbnails:
          type: array
          items:
            type: string
          description: Lista de URL de imágenes del producto.
        owner:
          type: string
          description: ID del propietario del producto.
      example:
        title: Maceta de cerámica
        description: Maceta de cerámica para plantas de interior.
        code: MAC-001
        price: 15.99
        stock: 50
        category: Jardinería
        thumbnails:
          - https://ejemplo.com/imagen1.jpg
          - https://ejemplo.com/imagen2.jpg
        owner: usuario123

    Cart:
      type: object
      properties:
        _id:
          type: string
          description: ID del carrito.
        products:
          type: array
          items:
            type: object
            properties:
              product:
                type: string
                description: ID del producto.
          description: Lista de productos en el carrito.
      example:
        _id: 123abc
        products:
          - product: abc123
          - product: def456
